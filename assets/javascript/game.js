//Function to start all functions needed to start game
$(document).ready(function () {

    //Variables 

    //Comp Score (function that random calculates a total score (between 19-120) the user is trying to match at the start of the game and then also re-runs after each user win or loss)
    var compScore;

    var updateCompScore = function () {
        compScore = Math.floor(Math.random() * 102) + 19;
        compScore = parseInt(compScore);
        $("#computer-score").text("Score to Match: " + compScore);
        console.log(compScore);
    };

    var updateUserScore = function () {
        userScore = 0;
    };

    //Value for Ruby (function that runs when game starts and also after each user win or loss)
    var Ruby = function () {
        rubyValue = Math.floor(Math.random() * 12) + 1;
        console.log(rubyValue);
    };

    //Value for Diamond (function that runs when game starts and also after each user win or loss)
    var Diamond = function () {
        diamondValue = Math.floor(Math.random() * 12) + 1;
        console.log(diamondValue);
    };

    //Value for Saphire (function that runs when game starts and also after each user win or loss)
    var Saphire = function () {
        saphireValue = Math.floor(Math.random() * 12) + 1;
        console.log(saphireValue);
    };

    //Value for Emerald (function that runs when game starts and also after each user win or loss)
    var Emerald = function () {
        emeraldValue = Math.floor(Math.random() * 12) + 1;
        console.log(emeraldValue);
    };

    //Wins (starts at 0 - win is when user's total score matches the random score generated by computer)
    var wins = 0;

    //Losses (starts at 0 - loss occurs when user's total score exceeds the random score generated by the computer)
    var losses = 0;

    //User Total Score (starts at 0 and goes up each time the user clicks on an image based on the value of that image during the given game)
    var userScore = 0;

    //Functions

    //Run Comp Score Function
    updateCompScore();

    //Call Function to randomly generate stone values that the user attempts to match
    Ruby();
    Diamond();
    Saphire();
    Emerald();

    //Reset function that sets all variables back to 0 (Call function in line 21 & 23 here) Wrap stones & comp score function back into this reset function)
    var reset = function () {
        updateCompScore();
        Ruby();
        Diamond();
        Saphire();
        Emerald();
    };

    //Function that alerts user when they won, updates wins & executes reset function
    var updateWins = function () {
        alert("Congratulations, you won!!");
        wins++;
        $("#user-wins").text("Wins: " + wins);
        reset();
    };

    //Function that alerts user when they lost, updates losses & executes reset function
    var updateLosses = function () {
        alert("Sorry, try again!");
        losses++;
        $("#user-losses").text("Losses: " + losses);
        reset();
    }

    //Function to Push Ruby Value to User Score & If/Else Statement to Run Functions when User Wins or Losses
    $("#rubyImage").on("click", function () {
        userScore = userScore + rubyValue;
        $("#user-total-score").text(userScore);
        console.log(userScore);
        if (userScore === compScore) {
            updateWins();
            updateUserScore();
            userScore = 0;
            $("#user-total-score").text(" ");
        } else if (userScore > compScore) {
            updateLosses();
            updateUserScore();
            userScore = 0;
            $("#user-total-score").text(" ");
        }
    });

    //Function to Push Diamond Value to User Score & If/Else Statement to Run Functions when User Wins or Losses
    $("#diamondImage").on("click", function () {
        userScore = userScore + diamondValue;
        $("#user-total-score").text(userScore);
        console.log(userScore);
        if (userScore === compScore) {
            updateWins();
            userScore = 0;
            $("#user-total-score").text(" ");
        } else if (userScore > compScore) {
            updateLosses();
            userScore = 0;
            $("#user-total-score").text(" ");
        }
    });

    //Function to Push Sapire Value to User Score & If/Else Statement to Run Functions when User Wins or Losses
    $("#saphireImage").on("click", function () {
        userScore = userScore + saphireValue;
        $("#user-total-score").text(userScore);
        console.log(userScore);
        if (userScore === compScore) {
            updateWins();
            userScore = 0;
            $("#user-total-score").text(" ");
        } else if (userScore > compScore) {
            updateLosses();
            userScore = 0;
            $("#user-total-score").text(" ");
        }
    });

    //Function to Push Emerald Value to User Score & If/Else Statement to Run Functions when User Wins or Losses
    $("#emeraldImage").on("click", function () {
        userScore = userScore + emeraldValue;
        $("#user-total-score").text(userScore);
        console.log(userScore);
        if (userScore === compScore) {
            updateWins();
            userScore = 0;
            $("#user-total-score").text(" ");
        } else if (userScore > compScore) {
            updateLosses();
            userScore = 0;
            $("#user-total-score").text(" ");
        }
    });
});